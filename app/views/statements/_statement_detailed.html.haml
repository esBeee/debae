.statement-detailed.card
  %blockquote.blockquote.mb-0.card-body
    %p
      = body(statement)
    .row.d-flex.flex-row.author
      .d-flex.align-items-center.quote-dash
      .d-flex.align-items-center.avatar-container
        = image_tag statement.user_or_mock.avatar.url(:thumb), class: "rounded-circle avatar"
      .d-flex.flex-column
        %a{ href: '#' }
          = statement.user_or_mock.name
        %small
          = creator_attitude_icon(statement)
          = t("statements.show.creator_attitudes.#{creator_attitude(statement)}", default: "") + '.'
    -# .row.meta
      .col.text-right
        %small
          = l(statement.created_at)

  - if !defined?(headline_only) || !headline_only
    %div.d-flex.flex-column-reverse.flex-md-row.justify-content-end
      .cta-section.mr-auto.d-flex.flex-row.align-items-end
        %div
          = render 'vote_button', statement: statement, is_pro_vote: true, existing_vote: has_voted?(true, current_user, statement)
        %div
          = render 'vote_button', statement: statement, is_pro_vote: false, existing_vote: has_voted?(false, current_user, statement)
      .score-section
        .score-container.d-flex.flex-row-reverse.rounded-top-left-bottom-right
          .total-score
            .score-badge.rounded-bottom-right.text-center{ data: { bg_color_by_score: statement.score } }
              .score
                = score(statement.score)
              .label
                = t("statements.show.scores.total", default: "Total score")
          .score-components.d-flex.flex-column.justify-content-center
            .argument-score
              != t("statements.show.scores.argument", default: "Argument score") + ':'
              %span.badge.badge-light{ data: { bg_color_by_score: statement.argument_score } }
                = score(statement.argument_score)
            .vote-score
              != t("statements.show.scores.vote", default: "Voting score")
              = "(#{statement.amount_of_votes} #{t("statements.show.scores.amount_of_votes", default: "votes", count: statement.amount_of_votes)})" + ':'
              %span.badge.badge-light{ data: { bg_color_by_score: statement.vote_score } }
                = percent(statement.vote_score)
